version: 2.1

parameters:
  stable-version:
    type: string
    default: "stable-2022-02-04"
  nightly-version:
    type: string
    default: "nightly-2022-02-04"

executors:
  default:
    machine:
      image: ubuntu-2004:202010-01
    working_directory: ~/helloci
    resource_class: xlarge
  darwin:
    macos:
      xcode: "13.3.0"
    working_directory: ~/helloci
    resource_class: xlarge

commands:
  set-env-path:
    steps:
      - run:
          name: Set the PATH env variable
          command: |
            # Also put the Rust LLVM tools into the PATH.
            echo 'export PATH="$HOME:~/.cargo/bin:~/.rustup/toolchains/<< pipeline.parameters.stable-version >>-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin:$PATH"' | tee --append $BASH_ENV
            source $BASH_ENV
  save_rustup_cache:
    steps:
      # - run: cp -R ~/.cargo ~/.rustup /tmp/
      - save_cache:
          name: "Save rustup cache"
          key: cargo-v2-{{ checksum "rust-toolchain" }}-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}-{{arch}}
          paths:
           - "~/.cargo"
           - "~/.rustup"
  #         - /tmp/.cargo
  #         - /tmp/.rustup
  restore_rustup_cache:
    steps:
      - restore_cache:
          keys:
            - cargo-v2-{{ checksum "rust-toolchain" }}-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}-{{ arch }}
            - repo-source-{{ .Branch }}-{{ .Revision }}
        #- run: cp -R /tmp/.cargo /tmp/.rustup ~/ || true
  cargo_fetch:
    steps:
      - run: curl https://sh.rustup.rs -sSf | sh -s -- -y
      - run: echo $HOME
      - run: cargo --version
      - run: rustc --version
      - run:
          name: Update submodules
          command: git submodule update --init --recursive
      - run:
          name: Calculate dependencies
          command: cargo generate-lockfile
      - restore_rustup_cache
      - run: cargo update
      - run: cargo fetch
      - run: rustup install $(cat rust-toolchain)
      - run: rustup default $(cat rust-toolchain)
      - run: rustc --version
      - run: rm -rf .git
      - persist_to_workspace:
          root: ~/
          paths:
            - helloci
          # root: "."
          # paths:
          #   - Cargo.lock
      - save_rustup_cache

jobs:
  fetch_linux:
    executor: default
    steps:
      - checkout
      - cargo_fetch
      - set-env-path
  fetch_mac:
    executor: darwin
    steps:
      - checkout
      - cargo_fetch
      - run: cp -R ~/.cargo ~/.rustup /tmp/

  linux_build:
    executor: default
    steps:
    - checkout
    - set-env-path
    - attach_workspace:
        at: "~/"
        #at: "."
    - restore_rustup_cache
    - run:
        cargo --version
    - run:
        name: Linux Tests
        command: cargo test --verbose
        no_output_timeout: 30m
  mac_build:
    executor: darwin
    steps:
    - checkout
    - run: cp -R /tmp/.cargo /tmp/.rustup ~/ || true
    - attach_workspace:
        at: "~/"
        #at: "/tmp"
    - restore_rustup_cache
    - run:
        cargo --version
    - run:
        name: MacOS Tests
        command: cargo test --verbose
        no_output_timeout: 30m
  rustfmt:
    executor: default
    steps:
      - checkout
      - set-env-path
      - attach_workspace:
          at: "~/"
          #at: "."
      - restore_rustup_cache
      - run:
          name: Run cargo fmt
          command: cargo fmt --all -- --check
  clippy:
    executor: default
    steps:
      - checkout
      - set-env-path
      - attach_workspace:
          at: "~/"
          #at: "."
      - restore_rustup_cache
      - run:
          name: Run clippy
          command: cargo clippy --all -- -D warnings
 
workflows:
  test_all:
    jobs:
      - fetch_linux
      - fetch_mac
      - linux_build:
          requires:
            - fetch_linux
      - mac_build:
          requires:
            - fetch_mac
      - rustfmt:
          requires:
            - fetch_linux
      - clippy:
          requires:
            - fetch_linux



      
