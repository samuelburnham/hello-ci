version: 2.1

parameters:
  stable-version:
    type: string
    default: "stable-2022-02-04"
  nightly-version:
    type: string
    default: "nightly-2022-02-04"

executors:
  default:
    machine:
      image: ubuntu-2004:202010-01
    resource_class: xlarge
  darwin:
    macos:
      xcode: "13.3.0"
    resource_class: xlarge

commands:
  # set-env-path:
  #   steps:
  #     - run:
  #         name: Set the PATH env variable
  #         command: |
  #           # Also put the Rust LLVM tools into the PATH.
  #           echo 'export PATH="$HOME:~/.cargo/bin:~/.rustup/toolchains/<< pipeline.parameters.stable-version >>-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin:$PATH"' | tee --append $BASH_ENV
  #           source $BASH_ENV
  save-rustup-cache:
    steps:
      - run: cp -R ~/.cargo ~/.rustup /tmp/
      - save_cache:
          name: "Save rustup cache"
          key: cargo-v2-{{ checksum "rust-toolchain" }}-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}-{{arch}}
          paths:
            - /tmp/.cargo
            - /tmp/.rustup
  restore-rustup-cache:
      steps:
        - restore_cache:
            keys:
              - cargo-v2-{{ checksum "rust-toolchain" }}-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}-{{ arch }}
              - repo-source-{{ .Branch }}-{{ .Revision }}
        - run: cp -R /tmp/.cargo /tmp/.rustup ~/ || true

jobs:
  cargo-fetch:
    executor: default
    steps:
      - checkout
      - run: curl https://sh.rustup.rs -sSf | sh -s -- -y
      - run: echo $HOME
      - run: cargo --version
      - run: rustc --version
      - run:
          name: Update submodules
          command: git submodule update --init --recursive
      - run:
          name: Calculate dependencies
          command: cargo generate-lockfile
      - restore_cache:
          keys:
            - cargo-v2-{{ checksum "rust-toolchain" }}-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}-{{ arch }}
      - run: cargo update
      - run: cargo fetch
      - run: rustup install $(cat rust-toolchain)
      - run: rustup default $(cat rust-toolchain)
      - run: rustc --version
      - run: rm -rf .git
      - persist_to_workspace:
          root: .
          paths:
            - Cargo.lock
      - save-rustup-cache

  linux-build:
    executor: default
    steps:
    - checkout
    - attach_workspace:
        at: "."
    - restore-rustup-cache
    - run:
        cargo --version
    - run:
        name: Linux Tests
        command: cargo test --verbose
        no_output_timeout: 30m

  mac-build:
    executor: darwin
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp"
    - restore-rustup-cache
    - run:
        cargo --version
    - run:
        name: MacOS Tests
        command: cargo test --verbose
        no_output_timeout: 30m

  rustfmt:
    executor: default
    steps:
      - checkout
      - attach_workspace:
          at: "."
      - restore-rustup-cache
      - run:
          name: Run cargo fmt
          command: cargo fmt --all -- --check
 
workflows:
  test-all:
    jobs:
      - cargo-fetch
      - linux-build:
          requires:
           - cargo-fetch
      # - rustfmt:
      #     requires:
      #       - cargo-fetch
      - mac-build:
          requires:
            - cargo-fetch
            - persist-parameters-to-workspace



      
